{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../utils/constants\";\nimport { shuffle } from \"../../utils/common\";\nexport const getProducts = createAsyncThunk(\"products/getProducts\", async (_, thunkAPI) => {\n  try {\n    const res = await axios(`${BASE_URL}/products`);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return thunkAPI.rejectWithValue(err);\n  }\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState: {\n    list: [],\n    filtered: [],\n    related: [],\n    isLoading: false\n  },\n  reducers: {\n    filterByPrice: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.filtered = state.list.filter(_ref2 => {\n        let {\n          price\n        } = _ref2;\n        return price < payload;\n      });\n    },\n    getRelatedProducts: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      const list = state.list.filter(_ref4 => {\n        let {\n          category: {\n            id\n          }\n        } = _ref4;\n        return id === payload;\n      });\n      state.related = shuffle(list);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(getProducts.fulfilled, (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.list = payload;\n      state.isLoading = false;\n    });\n    builder.addCase(getProducts.rejected, state => {\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  filterByPrice,\n  getRelatedProducts\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","BASE_URL","shuffle","getProducts","_","thunkAPI","res","data","err","console","log","rejectWithValue","productsSlice","name","initialState","list","filtered","related","isLoading","reducers","filterByPrice","state","_ref","payload","filter","_ref2","price","getRelatedProducts","_ref3","_ref4","category","id","extraReducers","builder","addCase","pending","fulfilled","_ref5","rejected","actions","reducer"],"sources":["C:/Users/bogda/Downloads/stuff-master/src/features/products/productsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nimport { BASE_URL } from \"../../utils/constants\";\nimport { shuffle } from \"../../utils/common\";\n\nexport const getProducts = createAsyncThunk(\n  \"products/getProducts\",\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios(`${BASE_URL}/products`);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n      return thunkAPI.rejectWithValue(err);\n    }\n  }\n);\n\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState: {\n    list: [],\n    filtered: [],\n    related: [],\n    isLoading: false,\n  },\n  reducers: {\n    filterByPrice: (state, { payload }) => {\n      state.filtered = state.list.filter(({ price }) => price < payload);\n    },\n    getRelatedProducts: (state, { payload }) => {\n      const list = state.list.filter(({ category: { id } }) => id === payload);\n      state.related = shuffle(list);\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getProducts.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(getProducts.fulfilled, (state, { payload }) => {\n      state.list = payload;\n      state.isLoading = false;\n    });\n    builder.addCase(getProducts.rejected, (state) => {\n      state.isLoading = false;\n    });\n  },\n});\n\nexport const { filterByPrice, getRelatedProducts } = productsSlice.actions;\n\nexport default productsSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,OAAO,MAAMC,WAAW,GAAGL,gBAAgB,CACzC,sBAAsB,EACtB,OAAOM,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAAE,GAAEC,QAAS,WAAU,CAAC;IAC/C,OAAOK,GAAG,CAACC,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAOH,QAAQ,CAACM,eAAe,CAACH,GAAG,CAAC;EACtC;AACF,CAAC,CACF;AAED,MAAMI,aAAa,GAAGb,WAAW,CAAC;EAChCc,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MAChCD,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACN,IAAI,CAACS,MAAM,CAACC,KAAA;QAAA,IAAC;UAAEC;QAAM,CAAC,GAAAD,KAAA;QAAA,OAAKC,KAAK,GAAGH,OAAO;MAAA,EAAC;IACpE,CAAC;IACDI,kBAAkB,EAAEA,CAACN,KAAK,EAAAO,KAAA,KAAkB;MAAA,IAAhB;QAAEL;MAAQ,CAAC,GAAAK,KAAA;MACrC,MAAMb,IAAI,GAAGM,KAAK,CAACN,IAAI,CAACS,MAAM,CAACK,KAAA;QAAA,IAAC;UAAEC,QAAQ,EAAE;YAAEC;UAAG;QAAE,CAAC,GAAAF,KAAA;QAAA,OAAKE,EAAE,KAAKR,OAAO;MAAA,EAAC;MACxEF,KAAK,CAACJ,OAAO,GAAGf,OAAO,CAACa,IAAI,CAAC;IAC/B;EACF,CAAC;EACDiB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAC/B,WAAW,CAACgC,OAAO,EAAGd,KAAK,IAAK;MAC9CA,KAAK,CAACH,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC;IACFe,OAAO,CAACC,OAAO,CAAC/B,WAAW,CAACiC,SAAS,EAAE,CAACf,KAAK,EAAAgB,KAAA,KAAkB;MAAA,IAAhB;QAAEd;MAAQ,CAAC,GAAAc,KAAA;MACxDhB,KAAK,CAACN,IAAI,GAAGQ,OAAO;MACpBF,KAAK,CAACH,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC;IACFe,OAAO,CAACC,OAAO,CAAC/B,WAAW,CAACmC,QAAQ,EAAGjB,KAAK,IAAK;MAC/CA,KAAK,CAACH,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,aAAa;EAAEO;AAAmB,CAAC,GAAGf,aAAa,CAAC2B,OAAO;AAE1E,eAAe3B,aAAa,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}